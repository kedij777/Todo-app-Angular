{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { TodoList } from \"./todoList\";\nimport { TodoItem } from \"./todoItem\";\n//decorator\nexport let AppComponent = class AppComponent {\n  constructor() {\n    this.showComplete = false;\n    this.list = new TodoList(\"Bob\", [new TodoItem(\"Go for run\", true), new TodoItem(\"Get flowers\"), new TodoItem(\"collect tickets\")]);\n  }\n  title(title) {\n    throw new Error('Method not implemented.');\n  }\n  get username() {\n    return this.list.user;\n  }\n  get itemCount() {\n    //lambda, \n    //.fileter(..), filters the items array to only include items that are not complete\n    return this.list.items.filter(item => !item.complete).length;\n  }\n  get items() {\n    // 显示\n    //The filter() method creates a shallow copy of a portion of a given array, filtered down to just the elements from the given array that pass the test implemented by the provided function.\n    return this.list.items.filter(item => !item.complete);\n  }\n  addItem(newItem) {\n    if (newItem != \"\") {\n      this.list.addItem(newItem);\n    }\n  }\n};\nAppComponent = __decorate([Component({\n  //css selector, app-root = root component of an angular applications \n  selector: 'app-root',\n  // path to htm,l\n  templateUrl: './app.component.html',\n  //array of css files that contains styles specfic to the compornet\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","TodoList","TodoItem","AppComponent","constructor","showComplete","list","title","Error","username","user","itemCount","items","filter","item","complete","length","addItem","newItem","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/kedi/Desktop/Skills/Todo-app-Angular/src/app/app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TodoList } from \"./todoList\";\nimport { TodoItem } from \"./todoItem\";\n\n\n\n//decorator\n@Component({\n  //css selector, app-root = root component of an angular applications \n  selector: 'app-root',\n  // path to htm,l\n  templateUrl: './app.component.html',\n  //array of css files that contains styles specfic to the compornet\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  showComplete: boolean = false;\n\n  title(title: any) {\n    throw new Error('Method not implemented.');\n  }\n  private list = new TodoList(\"Bob\", [\n    new TodoItem(\"Go for run\", true),\n    new TodoItem(\"Get flowers\"),\n    new TodoItem(\"collect tickets\"),\n  ]);\n\n  get username() : string {\n    return this.list.user;\n  }\n\n  get itemCount() : number { \n    //lambda, \n    //.fileter(..), filters the items array to only include items that are not complete\n    return this.list.items.filter(item => !item.complete).length;\n  }\n\n  get items() : readonly TodoItem[]{\n    // 显示\n    //The filter() method creates a shallow copy of a portion of a given array, filtered down to just the elements from the given array that pass the test implemented by the provided function.\n    return this.list.items.filter(item => !item.complete);\n  }\n  addItem(newItem: string) {\n    if (newItem != \"\") {\n      this.list.addItem(newItem);\n    }\n  }\n\n\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,QAAQ,QAAQ,YAAY;AAIrC;AASO,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAAlBC,YAAA;IACL,KAAAC,YAAY,GAAY,KAAK;IAKrB,KAAAC,IAAI,GAAG,IAAIL,QAAQ,CAAC,KAAK,EAAE,CACjC,IAAIC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,EAChC,IAAIA,QAAQ,CAAC,aAAa,CAAC,EAC3B,IAAIA,QAAQ,CAAC,iBAAiB,CAAC,CAChC,CAAC;EAwBJ;EA/BEK,KAAKA,CAACA,KAAU;IACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAOA,IAAIC,QAAQA,CAAA;IACV,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI;EACvB;EAEA,IAAIC,SAASA,CAAA;IACX;IACA;IACA,OAAO,IAAI,CAACL,IAAI,CAACM,KAAK,CAACC,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC,CAACC,MAAM;EAC9D;EAEA,IAAIJ,KAAKA,CAAA;IACP;IACA;IACA,OAAO,IAAI,CAACN,IAAI,CAACM,KAAK,CAACC,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC;EACvD;EACAE,OAAOA,CAACC,OAAe;IACrB,IAAIA,OAAO,IAAI,EAAE,EAAE;MACjB,IAAI,CAACZ,IAAI,CAACW,OAAO,CAACC,OAAO,CAAC;;EAE9B;CAGD;AAlCYf,YAAY,GAAAgB,UAAA,EARxBnB,SAAS,CAAC;EACT;EACAoB,QAAQ,EAAE,UAAU;EACpB;EACAC,WAAW,EAAE,sBAAsB;EACnC;EACAC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWnB,YAAY,CAkCxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}