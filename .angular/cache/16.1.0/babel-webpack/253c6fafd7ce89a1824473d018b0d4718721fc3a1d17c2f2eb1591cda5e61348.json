{"ast":null,"code":"import { TodoList } from \"./todoList\";\nimport { TodoItem } from \"./todoItem\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AppComponent_tr_22_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Yes\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_tr_22_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"No\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_tr_22_Template_input_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const item_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r2.complete = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\", 12);\n    i0.ɵɵtemplate(8, AppComponent_tr_22_span_8_Template, 2, 0, \"span\", 13);\n    i0.ɵɵtemplate(9, AppComponent_tr_22_span_9_Template, 2, 0, \"span\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r3 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.task);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", item_r2.complete);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", item_r2.complete);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", true);\n  }\n}\n//decorator\nexport class AppComponent {\n  constructor() {\n    this.list = new TodoList(\"Bob\", [new TodoItem(\"Go for run\", true), new TodoItem(\"Get flowers\"), new TodoItem(\"collect tickets\")]);\n  }\n  title(title) {\n    throw new Error('Method not implemented.');\n  }\n  get username() {\n    return this.list.user;\n  }\n  get itemCount() {\n    //lambda, \n    //.fileter(..), filters the items array to only include items that are not complete\n    return this.list.items.filter(item => !item.complete).length;\n  }\n  get items() {\n    return this.list.items.filter(item => !item.complete);\n  }\n  addItem(newItem) {\n    if (newItem != \"\") {\n      this.list.addItem(newItem);\n    }\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 23,\n  vars: 3,\n  consts: [[1, \"bg-primary\", \"text-center\", \"text-white\", \"p-2\"], [1, \"mt-1\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col\"], [\"placeholder\", \"Enter task here\", 1, \"form-control\"], [\"todoText\", \"\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"m-2\"], [1, \"table\", \"table-striped\", \"table-borded\", \"table-sm\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r8 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementStart(2, \"h6\", 1);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4);\n      i0.ɵɵelement(7, \"input\", 5, 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_9_listener() {\n        i0.ɵɵrestoreView(_r8);\n        const _r0 = i0.ɵɵreference(8);\n        return i0.ɵɵresetView(ctx.addItem(_r0.value));\n      });\n      i0.ɵɵtext(10, \" Add \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"table\", 9)(13, \"thead\")(14, \"tr\")(15, \"th\");\n      i0.ɵɵtext(16, \"No.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Todos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Done?\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"tbody\");\n      i0.ɵɵtemplate(22, AppComponent_tr_22_Template, 10, 5, \"tr\", 10);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.username, \"'s TODO List\\n\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\", ctx.itemCount, \" Incomplete Items\");\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["TodoList","TodoItem","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_tr_22_Template_input_ngModelChange_6_listener","$event","restoredCtx","ɵɵrestoreView","_r7","item_r2","$implicit","ɵɵresetView","complete","ɵɵtemplate","AppComponent_tr_22_span_8_Template","AppComponent_tr_22_span_9_Template","ɵɵadvance","ɵɵtextInterpolate","i_r3","task","ɵɵproperty","AppComponent","constructor","list","title","Error","username","user","itemCount","items","filter","item","length","addItem","newItem","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","AppComponent_Template_button_click_9_listener","_r8","_r0","ɵɵreference","value","AppComponent_tr_22_Template","ɵɵtextInterpolate1"],"sources":["/Users/kedi/Desktop/Todo-app-Angular/src/app/app.component.ts","/Users/kedi/Desktop/Todo-app-Angular/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TodoList } from \"./todoList\";\nimport { TodoItem } from \"./todoItem\";\n\n\n\n//decorator\n@Component({\n  //css selector, app-root = root component of an angular applications \n  selector: 'app-root',\n  // path to htm,l\n  templateUrl: './app.component.html',\n  //array of css files that contains styles specfic to the compornet\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title(title: any) {\n    throw new Error('Method not implemented.');\n  }\n  private list = new TodoList(\"Bob\", [\n    new TodoItem(\"Go for run\", true),\n    new TodoItem(\"Get flowers\"),\n    new TodoItem(\"collect tickets\"),\n  ]);\n\n  get username() : string {\n    return this.list.user;\n  }\n\n  get itemCount() : number { \n    //lambda, \n    //.fileter(..), filters the items array to only include items that are not complete\n    return this.list.items.filter(item => !item.complete).length;\n  }\n\n  get items() : readonly TodoItem[]{\n    return this.list.items.filter(item => !item.complete);\n  }\n  addItem(newItem: string) {\n    if (newItem != \"\") {\n      this.list.addItem(newItem);\n    }\n  }\n}\n\n","<!-- a shell or container for your angular appplication -->\n\n\n<!-- Web's title, Blue -->\n<h3 class=\"bg-primary text-center text-white p-2\">{{ username }}'s TODO List\n<h6 class =\"mt-1\">{{ itemCount }} Incomplete Items</h6>\n</h3>\n\n<!-- 添加待办事项 -->\n\n<div class =\"container-fluid\">\n  <div class = \"row\">\n    <div class = \"col\">\n      <input class = \"form-control\" placeholder=\"Enter task here\" #todoText />\n    </div>\n    <!-- event binding -->\n      <button class=\"btn btn-primary\" (click) = \"addItem(todoText.value)\">\n        Add\n      </button>\n  </div>\n</div>\n\n\n<div class=\"m-2\">\n  <!-- 显示待办事项列表，Table basic, column's title, checkbox -->\n  <table class=\"table table-striped table-borded table-sm\">\n    <thead>\n        <tr><th>No.</th><th>Todos</th><th>Done?</th></tr>\n    </thead>\n    <tbody>\n      <!-- *ngfor angular‘s for loop -->\n      <tr *ngFor= \"let item of items; let i = index\">\n        <td>{{i + 1}}</td>\n        <td>{{item.task}}</td>\n        <!-- ngModel binds the value of checked box and item.complete -->\n        <td>\n          <!-- [()] = 双向绑定 -->\n          <input type = \"checkbox\" [(ngModel)] = \"item.complete\" />\n        </td>\n        <!-- [ngSwitch] 表达式是一个条件语句， depends on item.complete's value-->\n        <td [ngSwitch] = \"item.complete\">\n          <span *ngSwitchCase = \"true\">Yes</span>\n          <!-- when none of the *ngSwitchDefault, when none of the switch case match, display \"No\"-->\n          <span *ngSwitchDefault>No</span>\n        </td>\n      </tr> \n    </tbody>\n  </table>  \n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}